CREATE TABLE HEROES(
  H_NAME VARCHAR2(30)
);

------AUDIT TABLE---------

CREATE TABLE AUDIT_HEROES(
  NEW_NAME   VARCHAR2(30),
  OLD_NAME   VARCHAR2(30),
  ENTRY_DATE VARCHAR2(30),
  USER_NAME  VARCHAR2(30),
z);

ALTER TABLE AUDIT_HEROES MODIFY ENTRY_DATE VARCHAR2(50);
DESC AUDIT_HEROES;
-------BACK-UP TABLE-------

CREATE TABLE BAC_HEROES AS 
SELECT * FROM HEROES;

------BACKUP TRIGGER-------

SET SERVEROUTPUT ON;
CREATE OR REPLACE TRIGGER BACK_HE
BEFORE INSERT OR DELETE OR UPDATE ON HEROES
FOR EACH ROW
ENABLE
DECLARE
BEGIN
  IF INSERTING THEN
    INSERT INTO BAC_HEROES (H_NAME) VALUES (:NEW.H_NAME);
  ELSIF DELETING THEN
    DELETE FROM BAC_HEROES WHERE H_NAME = :OLD.H_NAME;
  ELSIF UPDATING THEN
    UPDATE BAC_HEROES SET H_NAME = :NEW.H_NAME
    WHERE H_NAME=:OLD.H_NAME;
  END IF;
END;
/

CREATE OR REPLACE TRIGGER AUDIT_HR
BEFORE INSERT OR DELETE OR UPDATE ON HEROES
FOR EACH ROW 
ENABLE
DECLARE
  V_USER  VARCHAR2(30);
  V_DATE  VARCHAR2(30);
BEGIN 
  SELECT USER,TO_CHAR(SYSDATE, 'DD/MON/YYYY  HH24:MI:SS')
  INTO V_USER,V_DATE FROM DUAL;
 
  IF INSERTING THEN 
    INSERT INTO AUDIT_HEROES (NEW_NAME,OLD_NAME,USER_NAME,
    ENTRY_DATE,OPERATION) VALUES (:NEW.H_NAME,NULL,V_USER,
    V_DATE,'INSERT');
  ELSIF DELETING THEN
    INSERT INTO AUDIT_HEROES (NEW_NAME,OLD_NAME,USER_NAME,
    ENTRY_DATE,OPERATION) VALUES  (NULL,:OLD.H_NAME,V_USER,
    V_DATE,'DELETE');
  ELSIF UPDATING THEN
    INSERT INTO AUDIT_HEROES (NEW_NAME,OLD_NAME,USER_NAME,
    ENTRY_DATE,OPERATION) VALUES  (:NEW.H_NAME,:OLD.H_NAME,V_USER,
    V_DATE,'UPDATE');
  END IF;
END;
/
SELECT * FROM HEROES;
SELECT * FROM AUDIT_HEROES;
SELECT * FROM BAC_HEROES;

INSERT INTO HEROES (H_NAME) VALUES('SUPERMAN');

/
SET SERVEROUTPUT ON;
CREATE OR REPLACE FUNCTION EXM(X NUMBER)
RETURN NUMBER IS

V_VAR NUMBER(10);

BEGIN
 V_VAR := X;
    RETURN V_VAR;
 END;
/

SET SERVEROUTPUT ON;
DECLARE
 V_KOP NUMBER;
BEGIN 
  V_KOP:= EXM(01739);
  DBMS_OUTPUT.PUT_LINE('THE RESULT IS ' || V_KOP);
END;
/

CREATE OR REPLACE FUNCTION EX()
RETURN NUMBER IS

V_VAR NUMBER ;
BEGIN
  V_VAR := 01257;
  RETURN V_VAR;
END;
/
SET SERVEROUTPUT ON;
DECLARE
 V_KOP NUMBER;
BEGIN 
  V_KOP:= EX();
  DBMS_OUTPUT.PUT_LINE('THE RESULT IS ' || V_KOP);
END;
/















