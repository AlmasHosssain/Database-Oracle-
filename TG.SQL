CREATE TABLE SUPER(
  S_NAME VARCHAR2(30)
);

CREATE TABLE SH_AUDIT(
  NEW_NAME VARCHAR2(30),
  OLD_NAME VARCHAR2(30),
  USER_NAME VARCHAR2(30),
  ENTRY_DATE VARCHAR2(30),
  OPERATION VARCHAR2(30)
);

SET SERVEROUTPUT ON;
CREATE OR REPLACE TRIGGER KUFA
BEFORE INSERT OR DELETE OR UPDATE ON SUPER
FOR EACH ROW
ENABLE
DECLARE 
V_USER VARCHAR2(30);
BEGIN
SELECT USER INTO V_USER FROM DUAL;

IF INSERTING THEN
INSERT INTO SH_AUDIT (NEW_NAME,OLD_NAME,USER_NAME,ENTRY_DATE,OPERATION)
VALUES(:NEW.S_NAME,NULL,V_USER,NULL,'INSERT');

ELSIF DELETING THEN
INSERT INTO SH_AUDIT (NEW_NAME,OLD_NAME,USER_NAME,ENTRY_DATE,OPERATION)
VALUES(NULL,:OLD.S_NAME,V_USER,NULL,'DELETE');

ELSIF UPDATING THEN
INSERT INTO SH_AUDIT (NEW_NAME,OLD_NAME,USER_NAME,ENTRY_DATE,OPERATION)
VALUES(:NEW.S_NAME,NEW,V_USER,NULL,'UPDATE');

END IF;
END;
/
SELECT * FROM SH_AUDIT;
INSERT INTO SUPER (S_NAME) VALUES('CUMILLA');
/
SET SERVEROUTPUT ON;
CREATE OR REPLACE TRIGGER SUPER_AUDIT
BEFORE INSERT OR DELETE OR UPDATE ON SUPER
FOR EACH ROW
ENABLE
DECLARE 
V_USER VARCHAR2(30);
BEGIN
SELECT USER INTO V_USER FROM DUAL;

IF INSERTING THEN
INSERT INTO SH_AUDIT (NEW_NAME,OLD_NAME,USER_NAME,ENTRY_DATE,OPERATION)
VALUES(:NEW.S_NAME,NULL,V_USER,NULL,'INSERT');

ELSIF DELETING THEN
INSERT INTO SH_AUDIT (NEW_NAME,OLD_NAME,USER_NAME,ENTRY_DATE,OPERATION)
VALUES(NULL,:OLD.S_NAME,V_USER,NULL,'DELETE');

ELSIF UPDATING THEN
INSERT INTO SH_AUDIT (NEW_NAME,OLD_NAME,USER_NAME,ENTRY_DATE,OPERATION)
VALUES(:NEW.S_NAME,NEW,V_USER,NULL,'UPDATE');

END IF;
END;
